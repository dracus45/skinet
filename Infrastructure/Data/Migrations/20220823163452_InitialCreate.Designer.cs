// <auto-generated />
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220823163452_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductCompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Um")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Vat")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.HasIndex("ProductCompanyId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Core.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("Core.Entities.ProductCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Account1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Account2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Account3")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bank1")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bank2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bank3")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyCounty")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cui")
                        .HasColumnType("TEXT");

                    b.Property<int>("InvoiceFirst")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvoiceLast")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InvoiceSeries")
                        .HasColumnType("TEXT");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReceiptFirst")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReceiptLast")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReceiptSeries")
                        .HasColumnType("TEXT");

                    b.Property<string>("Register")
                        .HasColumnType("TEXT");

                    b.Property<int>("Vat")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ProductCompanies");
                });

            modelBuilder.Entity("Core.Entities.Product", b =>
                {
                    b.HasOne("Core.Entities.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.ProductCompany", "ProductCompany")
                        .WithMany()
                        .HasForeignKey("ProductCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");

                    b.Navigation("ProductCompany");
                });
#pragma warning restore 612, 618
        }
    }
}
